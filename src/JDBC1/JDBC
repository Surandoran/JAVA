무적권 마스터해라!!!!!!!!!!!!!!
JDBC(Java DataBase Connectivity)는 데이터베이스에 연결 및 작업을 하기 위한 자바 표준 인터페이스 입니다.
자바는 DBMS(Oracle, MySQL, MongoDB 등)의 종류에 상관 없이 하나의 JDBC API를 이용해서 데이터베이스 작업을 처리합니다.
 이 JDBC는 DB에 접근해서 CRUD를 쉽고 효율적이게 할 수 있게 하고, 고성능에서의 세련된 메소드를 제공하며 쉽게
 프로그래밍 할 수 있게 도와줍니다.

JDBC의 역할

＃ JDBC가 생긴 이유

JDBC API가 없던 때에는 데이터베이스의 종류 마다(ms-sql, my-sql, oracle ..) 각각의 SQL문을 사용
그 결과 DB의 종류에 따라 SQL문의 작성 방법이 너무나 차이가 나서 구현이 불편함.
그래서 메서드나 전역변수 등을 통합하는 문법으로 통일시킴. 그것이 JDBC

＃ 역할

Java 코드에서 DB서버에 접속
SQL문을 구성하고 DB서버에서 실행
DB서버에서 처리한 결과를 가져오기
DB의 정보를 가져오기
JDBC는 위와 같은 역할을 수행합니다. 이런 기능들을 수행하기 위해 자바에서 다양한 인터페이스들을 제공합니다.

＃ JDBC 관련 인터페이스

 - JDBC Driver manager

DBC드라이버 매니저에서는 JDBC 아키텍처의 중핵을 이룬 모듈에서 자바의 프로그램과 JDBC 드라이버와의 접속을 공급하는
역할 을 합니다.

 - JDBC Driver API

JDBC Driver API는 JDBC드라이버 매니저와 각 DBMS의 벤더에서 제공하는 JDBC Driver가 서로 접속하기 위한
인터페이스입니다.

 - JDBC Driver

JDBC Driver와 DBMS 접속을 제어하는 모듈. 통상적으로 JDBC드라이버는 각각의 DBMS
벤더에서 제공하는 DBMS에어떤 형태로 접속하는지에 의해 크게 네 종류로 나눌 수 있으며,
JDBC에서는 자바 프로그램에서 사용하는 JDBC 드라이버 매니저와 DBMS에 의존하는 JDBC 드라이버를
분리하는 것에서 DBMS 벤더에 의존하지 않는 환경을 제공합니다.

 - 마무리

자바라는 프로그래밍언어에서 JDBC를 사용하게되면 DBMS 벤더에 의존하지 않는 독립적 시스템 개발을
해줄수 있게 하는 것입니다. 이를 통해, DBMS의 종류에 따라 다르게 코딩하지 않고, 어떤 DBMS든지 동일하게
데이터베이스의 CRUD를 구현할 수 있게 됩니다.